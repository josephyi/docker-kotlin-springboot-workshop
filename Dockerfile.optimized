# syntax=docker/dockerfile:1
ARG JDK_IMAGE=eclipse-temurin
ARG JDK_IMAGE_TAG=21.0.1_12-jdk
ARG JRE_IMAGE=gcr.io/distroless/java-base-debian12
ARG JRE_IMAGE_TAG=nonroot

FROM ${JDK_IMAGE}:${JDK_IMAGE_TAG} AS builder
WORKDIR /workspace
# Install Gradle
COPY --link ./gradle ./gradle
COPY --link ./gradlew ./gradlew
RUN ./gradlew --no-daemon
# Install dependencies
COPY --link *.gradle.* *.gradle ./
RUN --mount=type=cache,target=/root/.gradle \ 
    ./gradlew --no-daemon -q dependencies
# Build App
COPY --link . . 
RUN --mount=type=secret,id=SOME_BUILD_SECRET \
    --mount=type=cache,target=/root/.gradle \
    ./gradlew bootJar -PSOME_BUILD_SECRET="$(cat /run/secrets/SOME_BUILD_SECRET)" \
    && java -Djarmode=layertools \
            -jar ./build/libs/app.jar \
            extract --destination ./build/layers \
    && JAVA_RUNTIME_MODULES="$(jdeps \
       --ignore-missing-deps \
       -q \
       -R \
       --multi-release 21 \
       --print-module-deps \
       --class-path="./build/layers/dependencies/BOOT-INF/lib/*" \
       --module-path="./build/layers/dependencies/BOOT-INF/lib/*" \
       ./build/libs/app.jar)" \
    && jlink \
       --no-header-files \
       --no-man-pages \
       --strip-debug \
       --compress 2 \
       --add-modules "${JAVA_RUNTIME_MODULES}" \
       --output javaruntime

FROM ${JRE_IMAGE}:${JRE_IMAGE_TAG} AS production
ENV JAVA_HOME=/opt/java/openjdk
ENV PATH="${JAVA_HOME}/bin:${PATH}"
WORKDIR /app
COPY --link --from=builder /workspace/javaruntime ${JAVA_HOME}
COPY --link --from=builder /workspace/build/layers/dependencies .
COPY --link --from=builder /workspace/build/layers/spring-boot-loader .
COPY --link --from=builder /workspace/build/layers/snapshot-dependencies .
COPY --link --from=builder /workspace/build/layers/application .

ENTRYPOINT [ "java", "org.springframework.boot.loader.JarLauncher" ]
